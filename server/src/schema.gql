# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Guild {
  id: ID!
  name: String!
  description: String!
  email: String!
  googleId: String!
  color: String!
  image: String!
  clans: [Clan!]!
  members: [GuildMember!]!
}

type Clan {
  id: ID!
  name: String!
  description: String!
  email: String!
  googleId: String!
  image: String!
  guild: Guild!
  positions: [GuildPosition!]!
}

type GuildPosition {
  id: ID!
  from: DateTime!
  to: DateTime
  kind: GuildPositionKind!
  member: GuildMember!
  clan: Clan
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum GuildPositionKind {
  MEMBER
  LEADER
  EXPERT
}

type GuildMember {
  id: ID!
  role: TeamRole!
  user: User!
  guild: Guild!
  positions: [GuildPosition!]!
}

enum TeamRole {
  OWNER
  MANAGER
  MEMBER
}

type Squad {
  id: ID!
  name: String!
  description: String!
  email: String!
  googleId: String!
  color: String!
  image: String!
  members: [SquadMember!]!
  chapters: [Chapter!]!
}

type Chapter {
  id: ID!
  name: String!
  description: String!
  email: String!
  googleId: String!
  squad: Squad!
  positions: [SquadPosition!]!
}

type Area {
  id: ID!
  name: String!
  description: String!
  image: String!
}

type Position {
  id: ID!
  name: String!
  description: String!
  image: String
  area: Area
}

type SquadPosition {
  id: ID!
  from: DateTime!
  to: DateTime
  notes: String
  member: SquadMember!
  chapter: Chapter
  position: Position!
}

type SquadMember {
  id: ID!
  role: TeamRole!
  positions: [SquadPosition!]!
  squad: Squad!
  user: User!
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
  primaryEmail: String!
  recoveryEmail: String!
  phone: String!
  image: String!
  googleId: String!
  status: UserStatus!
  role: UserRole!
  guilds: [GuildMember!]!
  squads: [SquadMember!]!
}

enum UserStatus {
  PENDING
  ACTIVE
  INACTIVE
}

enum UserRole {
  ADMIN
  USER
}

type Query {
  user(id: String!): User!
  me: User!
  users(search: String, role: UserRole, ids: [ID!]): [User!]!
}

type Mutation {
  createUser(data: CreateUserInput!): User!
  deleteUser(id: ID!): Boolean!
  migrateGoogleUsers: [User!]!
  signOut: Boolean!
}

input CreateUserInput {
  firstName: String!
  lastName: String!
  password: String!
  primaryEmail: String!
  recoveryEmail: String!
}
